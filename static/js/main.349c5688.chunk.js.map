{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","Loader","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.349c5688.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\nexport default Context","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\n/*export default function TodoItem({ todo, index }) {\r\n    return (\r\n        <li>\r\n            <strong>{index + 1}</strong>\r\n            {todo.title}\r\n        </li>\r\n    )\r\n}*/\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n    const { removeTodo } = useContext(Context)\r\n    const classes = []\r\n\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n\r\n   /*return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input type='checkbox' checked={todo.completed} style={styles.input} onChange={() => onChange(todo.id)} />\r\n                <strong>{index + 1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n\r\n            <button className='rm' onClick={() => removeTodo(todo.id)}>&times;</button>\r\n        </li>\r\n    )*/\r\n\r\n     return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input type='checkbox' checked={todo.completed} style={styles.input} onChange={() => onChange(todo.id)} />\r\n                <strong>{index + 1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n\r\n            <button className='rm' onClick={removeTodo.bind(null, todo.id)}>&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\n/*export default function TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index) => {\r\n                return <TodoItem todo={todo} key={todo.id} index={index} />\r\n            })}\r\n        </ul>\r\n    )\r\n}*/\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index) => {\r\n                return <TodoItem todo={todo} key={todo.id} index={index} onChange={props.onToggle} />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\nexport default () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', margin: '.5rem' }}>\r\n        <div className=\"lds-dual-ring\" />\r\n    </div>\r\n)","import React from 'react'\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({ isOpen: true })}>Open modal</button>\r\n\r\n                {this.state.isOpen && (<div className='modal'>\r\n                    <div className='modal-body'>\r\n                        <h1>Modal title</h1>\r\n                        <p>I am awesome modal!</p>\r\n                        <button onClick={() => this.setState({ isOpen: false })}>Close modal</button>\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","//import React from 'react'\nimport React, { useEffect } from 'react'\n/*import logo from './logo.svg';\nimport './App.css';*/\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\n//import AddTodo from './Todo/AddTodo'\nimport Loader from './Loader'\nimport Modal from './Modal/Modal'\n\n//const AddTodo = React.lazy(() => import('./Todo/AddTodo'))\n\nconst AddTodo = React.lazy(\n  () =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(import('./Todo/AddTodo'))\n      }, 3000)\n    })\n)\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n     /* {id: 1, completed: false, title: 'Купить хлеб'},\n      {id: 2, completed: false, title: 'Купить масло'},\n      {id: 3, completed: false, title: 'Купить молоко'}*/\n  ])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTimeout(() => {\n          setTodos(todos)\n          setLoading(false)\n        }, 2000)\n      })\n  }, [])\n\n  /*let todos = [\n    {id: 1, completed: false, title: 'Купить хлеб'},\n    {id: 2, completed: false, title: 'Купить масло'},\n    {id: 3, completed: false, title: 'Купить молоко'}\n  ]*/\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false\n        }\n      ])\n    )\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className='wrapper'>\n        <h1>React tutorial</h1>\n        <Modal />\n        <React.Suspense fallback={<Loader />}>\n          <AddTodo onCreate={addTodo} />\n        </React.Suspense>\n        \n        {loading && <Loader />}\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          <p>No todos!</p>\n        )}\n      </div>\n    </Context.Provider>\n  )\n}\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}